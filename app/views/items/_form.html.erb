<% content_for :head do %>
  <%= javascript_include_tag 'jquery-ui-1.8.7.custom.min.js' %>
  <%= javascript_include_tag 'jqModal.js' %>
  <%= javascript_include_tag 'item_editing.js' %>
  <style>
    .jqm_form {
        display: none;
        
        position: fixed;
        top: 17%;
        left: 50%;
        
        margin-left: -300px;
        width: 600px;
        
        background-color: #EEE;
        color: #333;
        border: 1px solid black;
        padding: 12px;
    }

    .jqm_form iframe { 
      width:99%; height:40%; 
      display: block; clear:both; 
      margin:auto; background:#111; border:1px dotted #444; 
    }
  </style>
  <script type="text/javascript">
    var property_associations = {};
    var selected_item_type = function() {
      return $("#item_type option:selected").val();
    };

    jQuery(function($) {
      $("select[name=item_type]").change(function(ev) {
        $.get(
          "/items/"+ev.target.val()+"/property_descriptors",
          function(data) { 
            if (data.length == 0) { $("#add_property").hide(); } else { $("#add_property").show(); }
          },
          'json'
        );
      });

      <% if Property.descriptors(@item.class).empty? %>
        $("#add_property").hide();
      <% end %>
      $("#add_property").hover(editIn, editOut);
      $("#add_property_window").jqm({
        //modal: true,
        trigger: "#add_property",
        onShow: function(dialog) {
          var window_contents = dialog.w.find(".jqm_content").contents();

          //manually trigger the change handler - finding the right incantation was hell.
          window_contents.find("#property_receiver").val(selected_item_type());
          dialog.w.find(".jqm_content").each(function() {
            this.contentWindow.property_receiver_change(selected_item_type());
          });

          window_contents.find("#add_property_submit").click(function() { 
            dialog.w.find(".jqm_content").each(function() {
              var req = this.contentWindow.add_property_data();
              if (req.type === "new") {
                handler = function(data) { 
                  property_associations[data.property_id] = req.data.qualifiers;
                  if (<%= @item.id%> !== "nil") {
                    $.get("/items/<%=@item.id%>/properties", function(data) {
                      $("#properties_list").replaceWith(data); 
                    });
                  }
                };

                req.data.receiver_id = <%=@item.id%>,
                req.data.qualifiers = req.qualifiers
                $.post("/properties", req.data, handler, "json");
              }
            });

            dialog.w.hide();
          });

          window_contents.find("#add_property_cancel").click(function() { dialog.w.hide(); });

          dialog.w.show();
        }
      });

      <% if Item.component_association_modules(@item.class).empty? %>
        $("#add_component").hide();
      <% end %>
      $("#add_component").hover(editIn, editOut);
      $("#add_component_window").jqm({
        trigger: "#add_component",
        onShow: function(dialog) {
          var window_contents = dialog.w.find(".jqm_content").contents();

          //manually trigger the change handler - finding the right incantation was hell.
          window_contents.find("#component_receiver").val(selected_item_type());
          dialog.w.find(".jqm_content").each(function() {
            this.contentWindow.component_receiver_change(selected_item_type());
          });

          window_contents.find("#add_component_submit").click(function() { 
            alert("Submit!");
            //var req = add_component_data();
            //$.post("/items/<%=@item.id%>/add_"+req.type+"_component", req.data, update_notice, "json");
            //$("#add_component_window").jqmHide(); 
          });

          window_contents.find("#add_component_cancel").click(function() { dialog.w.hide(); });

          dialog.w.show();
        }
      });
    });
  </script>
<% end %>

<%= form_for(@item, :as => :item, :url => item_path(@item)) do |f| %>
  <% if @item.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@item.errors.count, "error") %> prohibited this item from being saved:</h2>

      <ul>
      <% @item.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="form_fields">
    <dl>
      <dt><%= f.label :type %></dt>
      <dd><%= f.select(:type, Item.item_types.map{|t| t.to_s}) %></dd>
      <dt><%= f.label :name %></dt>
      <dd><%= f.text_field :name %></dd>
      <dt><%= f.label :description %></dt>
      <dd><%= f.text_area :description %></dd>
      <dt><%= f.label :purchasing %></dt>
      <dd><%= f.select(:purchasing, {"Manufactured" => "Manufactured", "Purchased" => "Purchased", "Inventory" => "Inventory"}) %></dd>
      <dt><%= f.label :dvinci_id %></dt>
      <dd><%= f.text_field :dvinci_id %></dd>
      <dt><%= f.label :cutrite_id %></dt>
      <dd><%= f.text_field :cutrite_id %></dd>
      <dt><%= f.label :vendor_sku %></dt>
      <dd><%= f.text_field :sku %></dd>
      <dt><%= f.label :qb_item_id %></dt>
      <dd><%= f.text_field :purchase_part_id %></dd>
      <dt>Properties <span id="add_property">(+)</span></dt>
      <dd><%= render :partial => 'properties', 
                     :locals => {:id => 'properties_list', :properties => @item.item_properties} %></dd>
      <dt>Components <span id="add_component">(+)</span></dt>
      <dd><%= render :partial => 'components', 
                     :locals => {:id => 'item_components', :components => @item.components} %></dd>
    </dl>
  </div>

  <div class="form_actions">
    <%= f.submit %>
  </div>
<% end %>

<div id="add_property_window" class="jqm_form">
  <iframe src="/items/add_property_form" class="jqm_content"></iframe>
</div>
<div id="add_component_window" class="jqm_form">
  <iframe src="/items/add_component_form" class="jqm_content"></iframe>
</div>
