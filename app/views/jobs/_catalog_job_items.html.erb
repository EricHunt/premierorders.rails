<%
manufactured_item = lambda do |i|
  i.item_category?('wood') && !(i.ship_by?('drop_ship') || i.purchasing_type?('Buyout'))
end

drop_ship_item = lambda do |i|
  i.ship_by?('drop_ship') && !manufactured_item.call(i)
end

other_item = lambda do |i|
  !(drop_ship_item.call(i) || manufactured_item.call(i))
end

%>
<dl class="items">
  <dt>
    Manufactured Items ($<%= "%0.2f" % job.total(&manufactured_item) %>) 
    <% if can? :pg_internal_cap, Job %><%= link_to "recalculate", recalculate_job_path(job) %><% end %>
  </dt>
  <dd><%= render :partial => 'items_table', 
                 :locals => {:job_items => job.job_items.order('tracking_id').select(&manufactured_item)} %></dd>
</dl>

<dl class="items">
  <dt>Other Items ($<%= "%0.2f" % job.total(&other_item)%>)</dt>
  <dd><%= render :partial => 'items_table', 
                 :locals => {:job_items => job.job_items.order('tracking_id NULLS LAST').select(&other_item)} %></dd>
</dl>

<dl class="items">
  <p id="inventory-items">THE FOLLOWING BUYOUT ITEMS WILL BE DROP SHIPPED:</p>
  <dt>Buyout Items ($<%= "%0.2f" % job.total(&drop_ship_item) %>)</dt>
  <dd><%= render :partial => 'items_table', 
                 :locals => {:job_items => job.job_items.includes(:item).order('items.vendor, tracking_id NULLS LAST').select(&drop_ship_item)} %></dd>
</dl>

